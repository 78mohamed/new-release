name: 1_New version and deploy

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    tags:        
      - '*'  
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "bump-version"
 send-release-note:
  runs-on: ubuntu-latest
  permissions:
      deployments: write
      contents: write
      statuses: write

  steps:

    - name: Checkout branch
      uses: actions/checkout@v4
    
    - name: Install MongoDB Shell
      run: |
        wget -qO - https://www.mongodb.org/static/pgp/server-7.0.asc | sudo apt-key add -
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-mongosh

    # - name: Install GitHub CLI
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y gh  

    - name: Get Repository Release Note
      id: get_note
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      run: |
        RELEASE_NOTES=$(gh release view --json body -q ".body")
        # Escape newlines and other special characters
        SAFE_RELEASE_NOTES=$(echo "$RELEASE_NOTES" | sed ':a;N;$!ba;s/\n/\/n/g')
        echo "releasenote=$SAFE_RELEASE_NOTES" >> "$GITHUB_OUTPUT"

    - name: Modify MongoDB Collection
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        RELEASENOTE: ${{ steps.get_note.outputs.releasenote }}
      run: |
        mongosh $MONGO_URI --eval "
          const db = db.getSiblingDB('customerSuccessDb'); // Replace with your database name
          const collection = db.getCollection('releaseNotes'); // Replace with your collection name

          // Delete all existing records
          const deleteResult = collection.deleteMany({});
          print('Deleted records:', deleteResult.deletedCount);

          // Insert the new record using the RELEASENOTE environment variable
          const newRecord = { releaseNote: process.env.RELEASENOTE };
          const insertResult = collection.insertOne(newRecord);
          print('Inserted record ID:', insertResult.insertedId);
        "
